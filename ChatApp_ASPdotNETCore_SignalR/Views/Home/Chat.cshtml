@model Chat
<div class="chat-body card">
    <div class="row mt-2 ml-2">
        <div class="col-md-9">
            <div class="input-group rounded">
              <label>Bạn đang trong cuộc trò chuyện với </label>
            </div>
            @foreach (var message in Model.Messages)
            {
                if (@message.Name == @ViewData["nameUser"].ToString())
                {
                    <div class="d-flex flex-row justify-content-end mr-3">
                        <div class="mr-1">
                            <p class="small p-2 me-3 mb-1 text-white rounded bg-primary">@message.Text</p>
                            <p class="small me-3 mb-3 rounded-3 text-muted">You - @message.Timestamp</p>
                        </div>
                        <i class="fas fa-user fa-2x"></i>
                    </div>
                }
                else
                {
                    <div class="d-flex flex-row justify-content-start ml-3">
                        <i class="fas fa-user-friends  fa-2x"></i>
                        <div>
                            <p class="small p-2 ms-3 mb-1 rounded-3" style="background-color: #f5f6f7;">
                                @message.Text
                            </p>
                            <p class="small ms-3 mb-3 rounded-3 text-muted float-end">@message.Name - @message.Timestamp</p>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="col-md-3 rounded" style="background:#e7e7ef">
            <div class="border">
                <div class="">
                    <div class="d-flex flex-column align-items-center text-center">
                        <img class="rounded-circle" width="75px" src="https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg">
                        <span class="font-weight-bold">@ViewData["nameUser"]</span><span class="text-black-50">null</span>
                    </div>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
                    <h7 class="text-right">Chi tiết tin nhắn </h7>
                    <p>***</p>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
                    <h7 class="text-right">Tìm kiếm trong cuộc trò truyện </h7>

                </div>
                <div class="input-group mb-3 mt-3">
                    <input type="search" class="form-control rounded" placeholder="Search" aria-label="Search"
                           aria-describedby="search-addon" />
                    <span class="input-group-text border-0" id="search-addon">
                        <i class="fas fa-search"></i>
                    </span>
                </div>
                <div class="input-group mb-3 mt-3">
                    <h7 class="text-right">File </h7>

                </div>
            </div>
        </div>
    </div>
</div>
<form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessage">
    <input type="hidden" name="roomId" value="@Model.Id">
    <input type="text" name="message" id="message-input" class="form-control"
           placeholder="Type message">
    <button type="submit" class="btn btn-light"><i class="fas fa-paper-plane fa-lg"></i></button>
</form>
@section scripts {
<script src="~/js/signalr.min.js"></script>
<script src="~/js/messageBuilder.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    var _connectionId = '';

    connection.on("RecieveMessage", function (data) {
        let html= '';
        var message = messageBuilder()
            .createMessage()
            .withHeader(data.name)
            .withParagraph(data.text)
            .withFooter(data.timestamp)
            .build();
        if (data.name == '@ViewData["nameUser"].ToString()')
        {
        html = `<div class="d-flex flex-row justify-content-end mr-3">
                <div class="mr-1">
                    <p class="small p-2 me-3 mb-1 text-white rounded bg-primary">`+`${data.text}`+`</p>
                    <p class="small me-3 mb-3 rounded-3 text-muted">You - `+`${data.timestamp}`+`</p>
                </div>
                <i class="fas fa-user fa-2x"></i>
            </div>`
        }
        else
        {
             html =`<div class="d-flex flex-row justify-content-start ml-3">
                <i class="fas fa-user-friends  fa-2x"></i>
                <div>
                    <p class="small p-2 ms-3 mb-1 rounded-3" style="background-color: #f5f6f7;">
                        `+`${data.text}`+`
                    </p>
                    <p class="small ms-3 mb-3 rounded-3 text-muted float-end">`+`${data.name}`+` - `+`${data.timestamp}`+`</p>
                </div>
            </div>`
        }
            console.log(data)
      return  document.querySelector('.chat-body').(html)
    })

    connection.start()
        .then(function () {
            connection.invoke('joinRoom', '@Model.Id');
        })
        .catch(function (err) {
            console.log(err)
        })

    window.addEventListener('onunload', function () {
        connection.invoke('leaveRoom', '@Model.Id');
    })

    var sendMessage = function (event) {
        event.preventDefault();

        var data = new FormData(event.target);
        document.getElementById('message-input').value = '';
        console.log(data)
        axios.post('/Home/SendMessage', data)
            .then(res => {
                console.log("Message Sent!")
            })
            .catch(err => {
                console.log("Failed to send message!")
            })
    }

</script>
}